apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: mizzou-news-pipeline
  namespace: production
  labels:
    dataset: Mizzou
    type: pipeline
spec:
  schedule: "0 */6 * * *"  # Every 6 hours (00:00, 06:00, 12:00, 18:00 UTC)
  timezone: "UTC"
  concurrencyPolicy: "Forbid"  # Don't run concurrent pipelines
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  workflowSpec:
    entrypoint: mizzou-pipeline
    serviceAccountName: argo-workflow
    
    # Pipeline orchestration - sequential steps
    templates:
    - name: mizzou-pipeline
      steps:
      # Step 1: Discovery
      - - name: discover-urls
          template: discovery-step
      
      # Step 2: Verification (conditional on discovery success)
      - - name: verify-urls
          template: verification-step
          when: "{{steps.discover-urls.status}} == Succeeded"
      
      # Step 3: Extraction (conditional on verification success)
      - - name: extract-content
          template: extraction-step
          when: "{{steps.verify-urls.status}} == Succeeded"
    
    # Discovery step template
    - name: discovery-step
      metadata:
        labels:
          dataset: Mizzou
          stage: discovery
      retryStrategy:
        limit: 2
        retryPolicy: "OnFailure"
        backoff:
          duration: "5m"
          factor: 2
          maxDuration: "20m"
      container:
        image: us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:latest
        imagePullPolicy: Always
        command:
          - python
          - -m
          - src.cli.cli_modular
          - discover-urls
          - --dataset
          - Mizzou
          - --source-limit
          - "50"
          - --max-articles
          - "50"
          - --days-back
          - "7"
        envFrom:
        - secretRef:
            name: origin-proxy-credentials
        env:
        # Database configuration
        - name: DATABASE_ENGINE
          value: "postgresql+psycopg2"
        - name: DATABASE_HOST
          value: "127.0.0.1"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: database
        # Cloud SQL Connector
        - name: USE_CLOUD_SQL_CONNECTOR
          value: "true"
        - name: CLOUD_SQL_INSTANCE
          value: "mizzou-news-crawler:us-central1:mizzou-db-prod"
        # Proxy configuration
        - name: PROXY_PROVIDER
          value: "decodo"
        - name: USE_ORIGIN_PROXY
          value: "false"
        - name: NO_PROXY
          value: "localhost,127.0.0.1,metadata.google.internal,huggingface.co,*.huggingface.co"
        resources:
          requests:
            cpu: 200m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 4Gi
    
    # Verification step template
    - name: verification-step
      metadata:
        labels:
          dataset: Mizzou
          stage: verification
      retryStrategy:
        limit: 2
        retryPolicy: "OnFailure"
        backoff:
          duration: "5m"
          factor: 2
          maxDuration: "20m"
      container:
        image: us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:latest
        imagePullPolicy: Always
        command:
          - python
          - -m
          - src.cli.cli_modular
          - verify-urls
          - --batch-size
          - "10"
          - --max-batches
          - "100"
        envFrom:
        - secretRef:
            name: origin-proxy-credentials
        env:
        # Database configuration
        - name: DATABASE_ENGINE
          value: "postgresql+psycopg2"
        - name: DATABASE_HOST
          value: "127.0.0.1"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: database
        # Cloud SQL Connector
        - name: USE_CLOUD_SQL_CONNECTOR
          value: "true"
        - name: CLOUD_SQL_INSTANCE
          value: "mizzou-news-crawler:us-central1:mizzou-db-prod"
        # Proxy configuration
        - name: PROXY_PROVIDER
          value: "decodo"
        - name: USE_ORIGIN_PROXY
          value: "false"
        - name: NO_PROXY
          value: "localhost,127.0.0.1,metadata.google.internal,huggingface.co,*.huggingface.co"
        # Rate limiting for verification
        - name: INTER_REQUEST_MIN
          value: "2.0"
        - name: INTER_REQUEST_MAX
          value: "5.0"
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 3Gi
    
    # Extraction step template
    - name: extraction-step
      metadata:
        labels:
          dataset: Mizzou
          stage: extraction
      retryStrategy:
        limit: 2
        retryPolicy: "OnFailure"
        backoff:
          duration: "5m"
          factor: 2
          maxDuration: "20m"
      container:
        image: us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:latest
        imagePullPolicy: Always
        command:
          - python
          - -m
          - src.cli.cli_modular
          - extract
          - --dataset
          - Mizzou
          - --limit
          - "20"
          - --batches
          - "60"
        envFrom:
        - secretRef:
            name: origin-proxy-credentials
        env:
        # Database configuration
        - name: DATABASE_ENGINE
          value: "postgresql+psycopg2"
        - name: DATABASE_HOST
          value: "127.0.0.1"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: database
        # Cloud SQL Connector
        - name: USE_CLOUD_SQL_CONNECTOR
          value: "true"
        - name: CLOUD_SQL_INSTANCE
          value: "mizzou-news-crawler:us-central1:mizzou-db-prod"
        # Proxy configuration
        - name: PROXY_PROVIDER
          value: "decodo"
        - name: USE_ORIGIN_PROXY
          value: "false"
        - name: SELENIUM_PROXY
          valueFrom:
            secretKeyRef:
              name: origin-proxy-credentials
              key: selenium-proxy-url
        # Moderate rate limiting for Mizzou
        - name: INTER_REQUEST_MIN
          value: "5.0"
        - name: INTER_REQUEST_MAX
          value: "15.0"
        - name: BATCH_SLEEP_SECONDS
          value: "30.0"
        - name: CAPTCHA_BACKOFF_BASE
          value: "1800"
        - name: CAPTCHA_BACKOFF_MAX
          value: "7200"
        # User agent rotation
        - name: UA_ROTATE_BASE
          value: "4"
        - name: UA_ROTATE_JITTER
          value: "0.25"
        # Decodo IP rotation
        - name: DECODO_ROTATE_IP
          value: "true"
        # Bypass proxy for internal services
        - name: NO_PROXY
          value: "localhost,127.0.0.1,metadata.google.internal,huggingface.co,*.huggingface.co"
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 3Gi
