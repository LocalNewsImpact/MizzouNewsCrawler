name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest -q
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run stress job weekly at 03:00 UTC on Sundays (example)
    - cron: '0 3 * * 0'
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Run ruff
        run: ruff check .

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Run tests
        run: pytest -q

  stress:
    name: Stress Concurrency Tests (scheduled/manual only)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-

      - name: Install dependencies (includes extras for stress)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run stress tests with RUN_STRESS_TESTS=1
        env:
          RUN_STRESS_TESTS: '1'
        run: |
          pytest -q tests/test_versioning_concurrent_stress.py -q
