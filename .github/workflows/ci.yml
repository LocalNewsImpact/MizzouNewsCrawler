name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run stress job weekly at 03:00 UTC on Sundays (example)
    - cron: '0 3 * * 0'
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run ruff
        run: python -m ruff check .

      - name: Check code formatting with black
        run: python -m black --check src/ tests/ web/

      - name: Check import sorting with isort
        run: python -m isort --check-only --profile black src/ tests/ web/

  security:
    name: Security Scan (weekly/manual only)
    runs-on: ubuntu-latest
    needs: [lint]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run bandit security scan
        run: |
          python -m bandit -r src/ -ll -f txt || true
          echo "Bandit found issues but not failing build (review recommended)"

      - name: Check dependency vulnerabilities with safety
        run: |
          python -m safety check --json || true
          echo "Safety check completed (review recommended)"
        continue-on-error: true

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Create data directory for tests
        run: mkdir -p data

      - name: Run tests with coverage
        run: pytest --cov=src --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=40

      - name: Generate coverage summary
        if: success()
        run: python tools/generate_coverage_summary.py coverage.xml coverage-summary.md

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-py311
          path: |
            coverage.xml
            coverage-summary.md
            htmlcov/
          if-no-files-found: warn

  stress:
    name: Stress Concurrency Tests (scheduled/manual only)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'

      - name: Install dependencies (includes extras for stress)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run stress tests with RUN_STRESS_TESTS=1
        env:
          RUN_STRESS_TESTS: '1'
        run: |
          pytest --override-ini addopts="-q" tests/test_versioning_concurrent_stress.py
