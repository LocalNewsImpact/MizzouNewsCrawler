name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run stress job weekly at 03:00 UTC on Sundays (example)
    - cron: '0 3 * * 0'
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Run ruff
        run: ruff check .

      - name: Check code formatting with black
        run: black --check src/ tests/ web/

      - name: Check import sorting with isort
        run: isort --check-only --profile black src/ tests/ web/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-security-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-security-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Run bandit security scan
        run: |
          bandit -r src/ -ll -f txt || true
          echo "Bandit found issues but not failing build (review recommended)"

      - name: Check dependency vulnerabilities with safety
        run: |
          safety check --json || true
          echo "Safety check completed (review recommended)"
        continue-on-error: true

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: [lint, security]
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=70

      - name: Generate coverage summary
        if: success()
        run: |
          python tools/generate_coverage_summary.py coverage.xml coverage-summary.md

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            coverage.xml
            coverage-summary.md
            htmlcov/
          if-no-files-found: warn

  stress:
    name: Stress Concurrency Tests (scheduled/manual only)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/wheels
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('requirements.txt','requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-

      - name: Install dependencies (includes extras for stress)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run stress tests with RUN_STRESS_TESTS=1
        env:
          RUN_STRESS_TESTS: '1'
        run: |
          pytest --override-ini addopts="-q" tests/test_versioning_concurrent_stress.py
