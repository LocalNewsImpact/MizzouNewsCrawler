name: Smoke â€” Proxy adapter tests

on:
  pull_request:
    branches: [feature/gcp-kubernetes-deployment, main]
  workflow_dispatch: {}

jobs:
  smoke-proxy-tests:
    runs-on: ubuntu-latest
    env:
      # Set to 'true' to use a minimal install (only pytest + pytest-asyncio)
      MINIMAL_SMOKE_INSTALL: 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        env:
          PIP_CACHE_DIR: ~/.cache/pip
        run: |
          python -m pip install --upgrade pip
          # If MINIMAL_SMOKE_INSTALL is true, install only pytest and pytest-asyncio
          if [ "${MINIMAL_SMOKE_INSTALL:-false}" = "true" ]; then
            echo "Minimal smoke install: installing pytest and pytest-asyncio"
            pip install --cache-dir "$PIP_CACHE_DIR" pytest pytest-asyncio
          else
            echo "Full smoke install: installing requirements and dev requirements"
            pip install --cache-dir "$PIP_CACHE_DIR" -r requirements.txt
            pip install --cache-dir "$PIP_CACHE_DIR" -r requirements-dev.txt
          fi

      - name: Run proxy smoke tests
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Keep pytest quiet and fail fast; we run explicit files to avoid
          # collecting the entire test suite which would trigger coverage gating.
          PYTEST_ADDOPTS: "-q --maxfail=1"
        run: |
          # Run the targeted test files directly (no -c /dev/null bypass).
          # Run targeted files and explicitly override addopts so repo-level
          # coverage gating does not apply to this smoke job.
          pytest --override-ini addopts="" $PYTEST_ADDOPTS tests/test_origin_proxy.py tests/test_integration_proxy.py
