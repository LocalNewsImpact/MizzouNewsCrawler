steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-processor'
    args:
      - 'build'
      - '--build-arg'
      - 'ML_BASE_IMAGE=${_ML_BASE_IMAGE}'
      - '-f'
      - 'Dockerfile.processor'
      - '-t'
      - 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:${SHORT_SHA}'
      - '-t'
      - 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:latest'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-processor'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor'
    waitFor:
      - 'build-processor'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'resolve-current-tags'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euo pipefail
        REGISTRY="us-central1-docker.pkg.dev/$${PROJECT_ID}/mizzou-crawler"
        DEFAULT_API="$${REGISTRY}/api:latest"
        DEFAULT_CRAWLER="$${REGISTRY}/crawler:latest"

        LAST_RELEASE=$$(gcloud deploy releases list \
          --delivery-pipeline=mizzou-news-crawler \
          --region=us-central1 \
          --sort-by="~createTime" \
          --limit=1 \
          --format="value(name)")

        if [ -n "$${LAST_RELEASE}" ]; then
          gcloud deploy releases describe "$${LAST_RELEASE}" \
            --delivery-pipeline=mizzou-news-crawler \
            --region=us-central1 \
            --format=json > /workspace/last_release.json

          python3 -c "import json, sys; from pathlib import Path; registry, default_api, default_crawler = sys.argv[1:]; data=json.load(open('/workspace/last_release.json')); artifacts={item.get('image'): item.get('tag') for item in data.get('buildArtifacts', [])}; api=artifacts.get('api', default_api); crawler=artifacts.get('crawler', default_crawler); Path('/workspace/current-tags.env').write_text(f'API_IMAGE={api}\nCRAWLER_IMAGE={crawler}\n')" "$${REGISTRY}" "$${DEFAULT_API}" "$${DEFAULT_CRAWLER}"
        else
          printf 'API_IMAGE=%s\nCRAWLER_IMAGE=%s\n' "$${DEFAULT_API}" "$${DEFAULT_CRAWLER}" > /workspace/current-tags.env
        fi

        echo "Resolved tags:" && cat /workspace/current-tags.env
    waitFor: ['push-processor']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'create-release'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euo pipefail
        source /workspace/current-tags.env

        PROCESSOR_IMAGE="us-central1-docker.pkg.dev/$${PROJECT_ID}/mizzou-crawler/processor:${SHORT_SHA}"

        echo "Creating Cloud Deploy release with:"
        echo "  Processor: $${PROCESSOR_IMAGE}"
        echo "  API: $${API_IMAGE}"
        echo "  Crawler: $${CRAWLER_IMAGE}"

        gcloud deploy releases create processor-${SHORT_SHA} \
          --delivery-pipeline=mizzou-news-crawler \
          --region=us-central1 \
          --annotations=commitId=${COMMIT_SHA},service=processor \
          --images=processor=$${PROCESSOR_IMAGE},api=$${API_IMAGE},crawler=$${CRAWLER_IMAGE}

        echo "âœ… Created Cloud Deploy release for Processor"
    waitFor: ['resolve-current-tags']

images:
  - 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:${SHORT_SHA}'
  - 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/processor:latest'

substitutions:
  _ML_BASE_IMAGE: 'us-central1-docker.pkg.dev/mizzou-news-crawler/mizzou-crawler/ml-base:latest'
timeout: 1800s
options:
  machineType: 'N1_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: 'ALLOW_LOOSE'
