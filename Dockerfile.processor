# Multi-stage Dockerfile for Background Processor
# Handles extraction, cleaning, entity extraction, classification

# Stage 1: Base image with system dependencies
FROM python:3.11-slim AS base

# Install system dependencies
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* && \
    apt-get update -o Acquire::Check-Valid-Until=false && \
    (apt-get install -y --no-install-recommends --allow-unauthenticated \
        gcc g++ libpq-dev || \
     apt-get install -y --no-install-recommends --fix-missing \
        gcc g++ libpq-dev) && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Stage 2: Install Python dependencies and download ML models
FROM base as deps

COPY requirements.txt requirements-dev.txt ./

# Install Python packages
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Download spacy model
RUN python -m spacy download en_core_web_sm

# Stage 3: Prepare for ML models (will be downloaded from GCS in production)
FROM deps as models

# Create directory for models
RUN mkdir -p /app/models

# Note: In production, models will be downloaded from GCS via init container
# This stage prepares the directory structure for local development

# Stage 4: Final runtime image
FROM base as runtime

# Copy installed packages from deps stage
COPY --from=deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=deps /usr/local/bin /usr/local/bin
COPY --from=deps /root/.cache /root/.cache

# Copy models (if available)
COPY --from=models /app/models /app/models

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

# Copy application code
COPY --chown=appuser:appuser src/ ./src/
COPY --chown=appuser:appuser orchestration/ ./orchestration/

# Create data and lookups directories
RUN mkdir -p /app/data /app/lookups && chown -R appuser:appuser /app/data /app/lookups

# Switch to non-root user
USER appuser

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    MODEL_PATH=/app/models

# Default command (can be overridden in Kubernetes)
CMD ["python", "-m", "src.cli.main", "extract", "--limit", "10"]
